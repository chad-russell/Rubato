require "/Users/chadrussell/Programming/galt/c.galt"

module hanning
{
	import c.math;
	import c.mem;

	// calculate hamming window for size
	hanning_matlab := {N : i32} =>
	{
		half :: i32;
		i :: i32;
		idx :: i32
		n :: i32;
		
		w := [N]f64();
		w.ptr = cast(*f64) malloc(N * sizeof(f64));
		memset(cast(*i8) w.ptr, 0, N * sizeof(f64));

		n = N - 1;

		if((n mod 2) == 0)
		{
			half = n / 2;

			i = 0;
			while i < half
			{
				w[i] = f64(0.5) * (f64(1.0) - cos(f64(2) * f64(PI) * (f64(i) + f64(1)) / (f64(n) + f64(1))));
				i = i + 1;
			}

			idx = half-1;

			i = half;
			while i < n
			{
				w[i] = w[idx];
				i = i + 1;
			}
		}
		else
		{
			half = (n+1)/2;

			i = 0;
			while i < half
			{
				w[i] = f64(0.5) * (f64(1) - cos(f64(2) * f64(PI) * (f64(i) + f64(1)) / (f64(n) + f64(1))));
				i = i + 1;
			}

			idx = half-2;

			i = half;
			while i < n
			{
				w[i] = w[idx];
				i = i + 1;
			}
		}

		i = N-1;
		while i >= 1
		{
			w[i] = w[i - 1];
			i = i - 1;
		}

		ret w.ptr;
	}
}
